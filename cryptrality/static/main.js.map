{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_helpers/auth.guard.ts","./src/app/_helpers/basic-auth.interceptor.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/loader.interceptor.ts","./src/app/_helpers/loader.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dialog-orders.html","./src/app/is-loading/is-loading.component.ts","./src/app/log-in/log-in.component.ts","./src/app/log-in/log-in.component.html","./src/app/logs/logs.component.ts","./src/app/logs/logs.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/scroll-up/scroll-up.component.ts","./src/app/scroll-up/scroll-up.component.html","./src/app/services/authentication.service.ts","./src/app/services/candlesticks.service.ts","./src/app/services/logs.service.ts","./src/app/services/summary.service.ts","./src/app/services/trading-symbols.service.ts","./src/app/strategy/strategy.component.ts","./src/app/strategy/strategy.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.authenticationService.userValue;\n        if (user) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    api_url: string = '/';\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add header with basic auth credentials if user is logged in and request is to the api url\n        const user = this.authenticationService.userValue;\n        const isLoggedIn = user && user.authdata;\n        const isApiUrl = request.url.startsWith(this.api_url);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Basic ${user.authdata}`\n                }\n            });\n        } else {\n            request = request.clone({\n                setHeaders: {\n                    Accept: 'application/hal+json',\n                    ContentType: 'application/json',\n                    NoAuthChallenge: 'true'\n                }\n            });\n            console.log(request.headers)\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","// loader-interceptor.service.ts\nimport { Injectable } from '@angular/core';\nimport {\n  HttpResponse,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private requests: HttpRequest<any>[] = [];\n\n  constructor(private loaderService: LoaderService) { }\n\n  removeRequest(req: HttpRequest<any>) {\n    const i = this.requests.indexOf(req);\n    if (i >= 0) {\n      this.requests.splice(i, 1);\n    }\n    this.loaderService.isLoading.next(this.requests.length > 0);\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    this.requests.push(req);\n\n    console.log(\"No of requests--->\" + this.requests.length);\n\n    this.loaderService.isLoading.next(true);\n    return new Observable(observer => {\n      const subscription = next.handle(req)\n        .subscribe(\n          event => {\n            if (event instanceof HttpResponse) {\n              this.removeRequest(req);\n              observer.next(event);\n            }\n          },\n          err => {\n            alert('error' + err);\n            this.removeRequest(req);\n            observer.error(err);\n          },\n          () => {\n            this.removeRequest(req);\n            observer.complete();\n          });\n      // remove request from queue when cancelled\n      return () => {\n        this.removeRequest(req);\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  public isLoading = new BehaviorSubject(false);\n  constructor() { }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { LogInComponent } from './log-in/log-in.component';\nimport { AuthGuard } from './_helpers/auth.guard'\nimport { StrategyComponent } from './strategy/strategy.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'strategy', component: StrategyComponent, canActivate: [AuthGuard] },\n  { path: 'logs', component: LogsComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LogInComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","<div class=\"container-fluid\">\n    <app-nav></app-nav>\n</div>\n<app-is-loading></app-is-loading>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { DialogOrders, DashboardComponent } from './dashboard/dashboard.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { LogsComponent } from './logs/logs.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollUpComponent } from './scroll-up/scroll-up.component';\nimport { LogInComponent } from './log-in/log-in.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { BasicAuthInterceptor } from './_helpers/basic-auth.interceptor';\nimport { MatInputModule } from '@angular/material/input';\nimport * as PlotlyJS from 'plotly.js-dist-min';\nimport { PlotlyModule } from 'angular-plotly.js';\nimport { LoaderService } from './_helpers/loader.service';\nimport { LoaderInterceptor } from './_helpers/loader.interceptor';\nimport { IsLoadingComponent } from './is-loading/is-loading.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { StrategyComponent } from './strategy/strategy.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    DashboardComponent,\n    DialogOrders,\n    LogsComponent,\n    ScrollUpComponent,\n    LogInComponent,\n    IsLoadingComponent,\n    StrategyComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatChipsModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    PlotlyModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    MatDialogModule\n  ],\n  providers: [\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, ViewChild, Inject } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { SummaryService } from '../services/summary.service';\nimport { Order, Position, Summary } from '../models/summary'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort'\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class DashboardComponent {\n\n  PositionColumns: string[] = [\n    'symbol', 'entry_price', 'entry_date',\n    'exit_price', 'exit_date', 'quantity', 'pnl'];\n\n\n  summary!: Observable<Summary>;\n  dataSource = new MatTableDataSource<Position>();\n  number_trades: number = 0;\n  number_winnings: number = 0;\n  total_pnl: number = 0;\n  daily_pnl: {\n      x: Date[],\n      y: number[],\n      name: string,\n      type: string,\n      mode: string} = {\n        x:[], y:[],\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Daily PnL'\n  };\n  plotly_daily: any[] = [];\n  plotly_layout: any = {\n    height: 200,\n    xaxis: {\n      tickformat: '%m-%d-%y'\n    },\n    margin: {\n      l: 50,\n      r: 80,\n      b: 20,\n      t: 20,\n      pad: 5\n    }    \n  };\n\n  symbols_pnl: {\n    x: number[],\n    y: string[],\n    type: string,\n    orientation: string} = {\n      x:[], y:[],\n      type: 'bar',\n      orientation: 'h'\n  };\n  plotly_symbols_pnl: any[] = [];\n  public plotly_barplot_layout: any = {\n    height: 550,\n    margin: {\n      l: 100,\n      r: 0,\n      b: 20,\n      t: 20,\n      pad: 5\n    }    \n  };\n\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator_orders!: MatPaginator;\n  @ViewChild(MatSort) sort_orders!: MatSort;\n  private cards_base = [\n    { title: 'Total PnL', id:'daily_pnl', cols:3, rows:1},\n    { title: 'Positions', id:'positions', cols:2, rows:2},\n    { title: 'PnL per symbols', id:'symbols_pnl', cols:1, rows:2},\n\n  ] \n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private symmary_service: SummaryService,\n    public dialog: MatDialog\n    ) {}\n  ngOnInit(): void {\n    this.summary = this.symmary_service.getData()\n      .pipe(map( summary => {\n        this.refreshData(summary)\n        return summary\n      }));\n    };\n\n\n    openDialog(position: Position) {\n      const dialogRef = this.dialog.open(DialogOrders, {\n        data: position.orders,\n        panelClass: 'fullscreen-dialog',\n        width: '100%'\n      });\n    }    \n    applyFilter(event: Event) {\n      const filterValue = (event.target as HTMLInputElement).value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  \n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    };\n    \n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  refreshSummary() {\n    this.summary = this.symmary_service.reloadData()\n      .pipe(map( summary => {\n        this.refreshData(summary)\n        return summary\n    }));\n  }\n\n  refreshData(summary: Summary) {\n    this.dataSource = new MatTableDataSource<Position>(summary.positions.reverse());\n    this.ngAfterViewInit();\n    this.number_trades = summary.number_trades;\n    this.number_winnings = summary.number_winnings;\n    this.daily_pnl.x = summary.daily_pnl.date;\n    this.daily_pnl.y = summary.daily_pnl.pnl;\n    this.symbols_pnl.y = [];\n    this.symbols_pnl.x = [];\n    this.plotly_daily = [this.daily_pnl];\n    this.total_pnl = summary.total_pnl;\n    let symbols_pnl_data: any = {}\n    for (let position of summary.positions) {\n      if (position.pnl != 0) {\n          symbols_pnl_data[position.symbol] = (\n          symbols_pnl_data[position.symbol] || 0) + position.pnl;\n      }\n    };\n    for (var symbol in symbols_pnl_data) {\n\n      if ( ! symbols_pnl_data.hasOwnProperty(symbol)) {\n         continue;\n      }\n   \n      this.symbols_pnl.y.push(symbol);\n      this.symbols_pnl.x.push(symbols_pnl_data[symbol]);\n   \n   }\n   this.plotly_symbols_pnl = [this.symbols_pnl];\n\n  }\n\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      let current_cards: any[] = []!!\n      this.cards_base.forEach(val => current_cards.push(Object.assign({}, val)));\n      if (matches){\n        for (let i = 0; i < current_cards.length; i++) {\n          current_cards[i].cols=1\n        }\n      }\n      return current_cards;\n    })\n  );\n\n  n_cols = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n\n        console.debug('phone layout activated');\n        return 1;\n      }\n      console.debug('tablet layout activated');\n      return 3;\n    })\n  );\n}\n\n@Component({\n  selector: 'dialog-orders',\n  templateUrl: './dialog-orders.html',\n  styleUrls: ['./dialog-orders.scss'],\n\n})\nexport class DialogOrders { \nconstructor(\n  public dialogRef: MatDialogRef<DialogOrders>,\n  @Inject(MAT_DIALOG_DATA) public data: Order[],\n) {}\n\nOrderColumns: string[] = [\n  'symbol', 'id', 'side', 'type', 'status',\n  'filled_quantity', 'limit_price', 'fees'];\n\ndataSourceOrders = new MatTableDataSource<Order>(this.data);\n\n  onClick(): void {\n    this.dialogRef.close();\n  }\n}","<button class=\"reload-button\" mat-mini-fab color=\"warn\" aria-label=\"Reload PnL summary\" (click)=\"refreshSummary()\">\n  <mat-icon mat-list-icon>refresh</mat-icon>\n</button>\n<div>\n  \n</div>\n\n<mat-card class=\"timestamp-card\">\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item>\n        <mat-icon mat-list-icon>check</mat-icon>\n        <div mat-line>Data loaded {{(summary | async)?.loaded_date | date:'short'}}</div>\n      </mat-list-item>\n    </mat-list>\n    <mat-divider></mat-divider> \n  </mat-card-content>\n</mat-card>\n\n\n<mat-grid-list cols=\"{{ n_cols | async }}\" rowHeight=\"350px\">\n  <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n    <mat-card class=\"dashboard-card\">\n      <mat-card-header>\n        <mat-card-title-group class=\"card-title-group\" *ngIf=\"card.id=='daily_pnl'\">\n          <mat-card-title>\n            {{total_pnl | number:'1.0-1'}}\n          </mat-card-title>\n          <span>\n            winning trades\n            <h2>\n              {{ number_winnings }} / {{ number_trades }}\n            </h2>\n          </span>\n          <mat-card-subtitle>\n            {{ card.title }}\n          </mat-card-subtitle>\n        </mat-card-title-group>\n        <mat-card-title *ngIf=\"card.id=='symbols_pnl'\">{{ card.title }}</mat-card-title>\n        <mat-card-title *ngIf=\"card.id=='positions'\">{{ card.title }}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"dashboard-card-content\">\n        <div *ngIf=\"card.id=='tot_pnl'\">\n          {{total_pnl | number:'1.0-1'}}\n        </div>\n        <div *ngIf=\"card.id=='winning'\">\n          <p>Total number of trades {{ number_trades }}</p>\n          <p>Number of winning trades {{ number_winnings }}</p>\n        </div>\n        <div *ngIf=\"card.id=='daily_pnl'\">\n          <plotly-plot [data]=\"plotly_daily\" [layout]=\"plotly_layout\" [config]=\"{responsive: true}\"></plotly-plot>\n        </div>\n        <div *ngIf=\"card.id=='symbols_pnl'\">\n          <plotly-plot [data]=\"plotly_symbols_pnl\" [layout]=\"plotly_barplot_layout\" [config]=\"{responsive: true}\"></plotly-plot>\n        </div>\n        <mat-form-field *ngIf=\"card.id=='positions'\" appearance=\"standard\">\n          <mat-label>Filter</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. BTCUSDT\" #input>\n        </mat-form-field>\n        <div class=\"mat-elevation-z8 example-container\" *ngIf=\"card.id=='positions'\">\n          <table mat-table [dataSource]=\"dataSource\" class=\"position-table\" matSort>\n            <ng-container matColumnDef=\"symbol\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n            </ng-container>\n        \n            <ng-container matColumnDef=\"entry_price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry Price </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.entry_price}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"entry_date\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry Date </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.entry_date | date:'d/M/yy HH:mm'}} </td>\n            </ng-container>\n            \n            <ng-container matColumnDef=\"exit_price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Exit Price </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.exit_price}} </td>\n            </ng-container>\n        \n            <ng-container matColumnDef=\"exit_date\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Exit Date </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.exit_date | date:'d/M/yy HH:mm'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"quantity\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n            </ng-container>\n        \n            <ng-container matColumnDef=\"pnl\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> PnL </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.pnl | number:'1.0-3'}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"PositionColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: PositionColumns;\" (click)=\"openDialog(row)\"></tr>\n          </table>\n        \n          <mat-paginator [pageSizeOptions]=\"[4, 8]\"\n                         showFirstLastButtons \n                         aria-label=\"Select page of positions\">\n          </mat-paginator>\n        </div>\n        \n        \n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>","<h2 mat-dialog-title>Orders in Position</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <table mat-table [dataSource]=\"dataSourceOrders\" class=\"order-table\">\n      <ng-container matColumnDef=\"symbol\">\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef> Id </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef> Type </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"side\">\n        <th mat-header-cell *matHeaderCellDef> Side </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.side}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Status </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"filled_quantity\">\n        <th mat-header-cell *matHeaderCellDef> Filled </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.filled_quantity}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"limit_price\">\n        <th mat-header-cell *matHeaderCellDef> Limit Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.limit_price}} </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"fees\">\n        <th mat-header-cell *matHeaderCellDef> Fees </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fees | number:'1.0-3'}} </td>\n      </ng-container>\n      \n      <tr mat-header-row *matHeaderRowDef=\"OrderColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: OrderColumns;\"></tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[4, 8]\"\n                   showFirstLastButtons \n                   aria-label=\"Select page of positions\">\n    </mat-paginator>\n  </mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import { Component } from '@angular/core';\nimport { LoaderService } from '../_helpers/loader.service';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs'\nimport { MatSpinner } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-is-loading',\n  templateUrl: './is-loading.component.html',\n  styleUrls: ['./is-loading.component.scss']\n})\nexport class IsLoadingComponent {\n\n  loading: boolean | undefined;\n  spin$ :Subject<boolean> = new Subject()\n\n  private cdkSpinnerCreate() {\n    return this.overlay.create({\n        hasBackdrop: true,\n        backdropClass: 'dark-backdrop',\n        positionStrategy: this.overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically()\n    })\n  }\n\n  private spinnerTopRef = this.cdkSpinnerCreate();\n  private showSpinner(){\n      console.log(\"attach\")\n      this.spinnerTopRef.attach(new ComponentPortal(MatSpinner))\n    }\n  private stopSpinner(){\n      console.log(\"dispose\")\n      this.spinnerTopRef.detach() ;\n  }\n  constructor(\n    private loaderService: LoaderService,\n    private overlay: Overlay) {\n\n    this.loaderService.isLoading.subscribe((v) => {\n      if (v) {\n        this.showSpinner()\n      } else {\n        this.stopSpinner()\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n    selector: 'app-log-in',\n    templateUrl: './log-in.component.html',\n    styleUrls: ['./log-in.component.scss']\n  })\n  \n\nexport class LogInComponent implements OnInit {\n    loginForm!: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string | undefined;\n    error: string = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { \n        // redirect to home if already logged in\n        if (this.authenticationService.userValue) {\n    \n            if (this.authenticationService.userValue.username != '') {\n                this.router.navigate(['/logs']);\n            }\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/logs';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f['username'].value, this.f['password'].value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}","\n<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <h2>Log In</h2>\n        <mat-error *ngIf=\"submitted && f['username'].errors\">\n          The username and password were not recognized\n        </mat-error>\n        <mat-form-field>\n          <input matInput placeholder=\"Username\" formControlName=\"username\" required>\n          <mat-error>\n            Please provide a valid email address\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\n          <mat-error>\n            Please provide a valid password\n          </mat-error>\n        </mat-form-field>\n        <button mat-raised-button [disabled]=\"!loginForm.valid\" color=\"primary\">Login</button>\n      </form>\n    </mat-card-content>\n</mat-card>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DOCUMENT, ViewportScroller } from '@angular/common';\n\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogsService } from '../services/logs.service';\n\ninterface LogName {\n  label: string;\n  name: string;\n}\n\n@UntilDestroy()\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\n\nexport class LogsComponent implements OnInit {\n  tabLoadTimes: Date[] = [];\n  log_name: string = \"exec\";\n  n: number = 10;\n  last_logs: Observable<string[]> | undefined;\n  selectedTab = 0;\n  possible_n: number[] = [10, 50, 200];\n  possible_logs: LogName[] = [\n    {'label': 'Executions', name: 'exec'},\n    {'label': 'Strategy', name: 'strategy'},\n    {'label': 'Engine', name: 'bot'},\n  ];\n\n  readonly showScroll$: Observable<number> = fromEvent(\n    this.document,\n    'scroll'\n  ).pipe(\n    untilDestroyed(this),\n    map(() => this.viewport.getScrollPosition()?.[1])\n  );\n\n  public onLengthChipClick(event: number) {\n    this.n = event;\n    this.refreshLogs();\n  }\n\n  public onLogChipClick(event: LogName) {\n    this.log_name = event.name;\n    this.refreshLogs();\n  }\n\n  constructor(\n    private logs: LogsService, \n    @Inject(DOCUMENT) private readonly document: Document,\n    private readonly viewport: ViewportScroller) { }\n\n  refreshLogs() {\n    this.last_logs = this.logs.getData(this.log_name, this.n);\n  }\n\n  ngOnInit(): void {\n    this.refreshLogs();\n  }\n\n  onScrollToTop(): void {\n    console.log(this.viewport.getScrollPosition())\n\n    this.viewport.scrollToPosition([0, 0]);\n  }\n\n}\n","<ng-container *ngIf=\"showScroll$ | async\">\n    <app-scroll-up (scrollToTop)=\"onScrollToTop()\"></app-scroll-up>\n</ng-container>\n<button class=\"reload-button\" mat-mini-fab color=\"warn\" aria-label=\"Reload Engine Logs\" (click)=\"refreshLogs()\">\n    <mat-icon mat-list-icon>refresh</mat-icon>\n</button>\n<mat-card class=\"logs-card\">\n    <mat-card-title>Inspect Logs</mat-card-title>\n    <mat-card-content>\n      <p>\n          Select the log file\n      </p>\n    </mat-card-content>\n    <mat-divider></mat-divider>\n    <mat-card-actions>\n      <mat-chip-list #chipList aria-label=\"Log File\">\n        <mat-chip\n          *ngFor=\"let log of possible_logs\" [selected]=\"log.name == this.log_name\" (click)=\"onLogChipClick(log)\">\n            {{log.label}}\n        </mat-chip>\n      </mat-chip-list>\n    </mat-card-actions>\n</mat-card>\n<mat-card class=\"logs-card\">\n  <mat-card-subtitle>Select Log Length</mat-card-subtitle>\n  <mat-card-content>\n    <p>\n        Select the maximum number of lines to read from the log files\n    </p>\n  </mat-card-content>\n  <mat-divider></mat-divider>\n  <mat-card-actions>\n    <mat-chip-list #chipList aria-label=\"Log Length\">\n      <mat-chip\n        *ngFor=\"let n_lines of possible_n\" [selected]=\"n_lines == this.n\" (click)=\"onLengthChipClick(n_lines)\">\n          {{n_lines}}\n      </mat-chip>\n    </mat-chip-list>\n</mat-card-actions>\n</mat-card>\n<mat-card class=\"logs-card\">\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item *ngFor=\"let log_line of (last_logs | async)?.reverse()\">\n        <mat-icon *ngIf=\"log_line.startsWith('ERROR')\" mat-list-icon>error</mat-icon>\n        <mat-icon *ngIf=\"log_line.startsWith('WARNING')\" mat-list-icon>warning</mat-icon>\n        <mat-icon *ngIf=\"log_line.startsWith('INFO')\" mat-list-icon>check</mat-icon>\n        <div mat-line>{{log_line}}</div>\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </mat-list>\n    <mat-divider></mat-divider> \n  </mat-card-content>\n</mat-card>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>\n        <img class=\"big-logo\" src=\"/assets/logo.png\" >\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/dashboard\">Dashboard</a>\n      <a mat-list-item routerLink=\"/strategy\">Strategy</a>\n      <a mat-list-item routerLink=\"/logs\">Logs</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        class=\"icon-button\"\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <img class=\"icon\" src=\"/assets/logo_black.png\"/>\n        <!-- <mat-icon aria-label=\"Side nav toggle icon\" class=\"cryptrality-logo\"></mat-icon> -->\n      </button>\n      <span>Cryptrality</span>\n\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-scroll-up',\n  templateUrl: './scroll-up.component.html',\n  styleUrls: ['./scroll-up.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollUpComponent {\n\n\n  @Output() scrollToTop = new EventEmitter<void>();\n\n  constructor() { }\n\n  onScrollToTop(): void {\n    this.scrollToTop.emit();\n  }\n}\n","<button mat-mini-fab color=\"primary\" (click)=\"onScrollToTop()\">\n  <div class=\"scroll-icon\"><mat-icon>arrow_upward</mat-icon></div>\n</button>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../models/user';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n    private no_one: User = {username: '', password: ''};\n\n    public api_url: string = \"/api/\";\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('user') || '{}'));\n        this.user = this.userSubject.asObservable();\n    }\n\n    \n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username: string, password: string) {\n        this.no_one.username = username;\n        this.no_one.password = password;\n        this.no_one.authdata = window.btoa(username + ':' + password);\n        sessionStorage.setItem('user', JSON.stringify(this.no_one));\n        this.userSubject.next(this.no_one);\n        return of(this.no_one);\n        // return this.http.post<any>(this.api_url, { username, password })\n        //     .pipe(map(user => {\n        //         // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\n        //         user.authdata = window.btoa(username + ':' + password);\n        //         sessionStorage.setItem('user', JSON.stringify(user));\n        //         this.userSubject.next(user);\n        //         console.log(user);\n        //         return user;\n        //     }));\n\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        sessionStorage.removeItem('user');\n        this.userSubject.next(this.no_one);\n        this.router.navigate(['/login']);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandlesticksService {\n  constructor(\n    private http: HttpClient) { }\n  private url = '/api/callback'\n\n  getData(symbol: string, time_window: string): Observable<any> {\n    let api_url: string = `${this.url}/${symbol}/${time_window}`\n    console.log(api_url)\n    return this.http.get<any>(api_url)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogsService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  private url = '/api/logs/'\n\n  getData(log_name: string, n: number): Observable<string[]> {\n\n    return this.http.get<string[]>(`${this.url}/${log_name}/${n}`)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Summary } from '../models/summary';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SummaryService {\n  private summarySubject: BehaviorSubject<Summary>;\n  public summary: Observable<Summary>;\n  constructor(\n    private http: HttpClient) {\n      this.summarySubject = new BehaviorSubject<Summary>(JSON.parse(sessionStorage.getItem('summary') || '{}'));\n      this.summary = this.summarySubject.asObservable();\n    }\n\n  private url = '/api/summary'\n\n  public get summaryValue(): Summary {\n    return this.summarySubject.value;\n}\n  reloadData(): Observable<Summary> {\n    return this.http.get<Summary>(this.url)\n    .pipe(\n      map(summary => {\n        sessionStorage.setItem('summary', JSON.stringify(summary));\n        console.log(summary)\n        return summary\n      }))\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n\n  getData(): Observable<Summary> {\n    if (this.summaryValue.loaded_date) {\n      return this.summarySubject\n    } else {\n      return this.reloadData()\n    }\n  }\n\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {TradingSymbol} from '../models/trading_symbol';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TradingSymbolsService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  private url = '/api/trading_pairs/'\n\n  getData(): Observable<TradingSymbol[]> {\n    return this.http.get<TradingSymbol[]>(this.url)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { TradingSymbolsService } from '../services/trading-symbols.service';\nimport { CandlesticksService } from '../services/candlesticks.service';\nimport { TradingSymbol } from '../models/trading_symbol';\n@Component({\n  selector: 'app-strategy',\n  templateUrl: './strategy.component.html',\n  styleUrls: ['./strategy.component.scss']\n})\nexport class StrategyComponent implements OnInit {\n\n\n  available_symbols: Observable<TradingSymbol[]> | undefined;\n  symbol: string = '';\n  time_windows: string[] = ['2d', '12h', '6h', '2h']\n  time_window: string = '6h';\n  candles: Observable<any> = of(null);\n  constructor(\n    private candlesticks: CandlesticksService,\n    private trading_symbols: TradingSymbolsService) { }\n\n\n  public onWindowChipClick(event: string) {\n    this.time_window = event;\n    this.refreshCandles();\n  }\n\n  public onSymbolChipClick(event: string) {\n    console.log(event)\n    this.symbol = event;\n    this.refreshCandles();\n  }\n\n\n  refreshCandles() {\n    if (this.symbol != '') {\n      this.candles = this.candlesticks.getData(\n        this.symbol, this.time_window).pipe(\n          map( candles => {\n            console.log(candles)\n          return candles;\n      }));\n    }\n  }\n\n  ngOnInit(): void {\n    this.refreshCandles();\n    this.available_symbols = this.trading_symbols.getData()\n    console.log(this.candles)\n  }\n\n}\n","<button class=\"reload-button\" mat-mini-fab color=\"warn\" aria-label=\"Reload Chart\" (click)=\"refreshCandles()\">\n    <mat-icon mat-list-icon>refresh</mat-icon>\n</button>\n<mat-card class=\"strategy-card\">\n    <mat-card-title>Inspect Strategy indicators and trades</mat-card-title>\n    <mat-card-content>\n      <p>\n          Select the symbol\n      </p>\n    </mat-card-content>\n    <mat-divider></mat-divider>\n    <mat-card-actions>\n      <mat-chip-list #chipList aria-label=\"Log File\">\n        <mat-chip\n          *ngFor=\"let trading_symbol of (available_symbols | async)\" [selected]=\"trading_symbol.symbol == this.symbol\" (click)=\"onSymbolChipClick(trading_symbol.symbol)\">\n            {{trading_symbol.symbol}}\n        </mat-chip>\n      </mat-chip-list>\n    </mat-card-actions>\n</mat-card>\n<mat-card class=\"strategy-card\">\n  <mat-card-subtitle>Select Time Window</mat-card-subtitle>\n  <mat-card-content>\n    <p>\n        Select the time window to fetch the latest available data\n    </p>\n  </mat-card-content>\n  <mat-divider></mat-divider>\n  <mat-card-actions>\n    <mat-chip-list #chipList aria-label=\"Log Length\">\n      <mat-chip\n        *ngFor=\"let time_span of time_windows\" [selected]=\"time_span == this.time_window\" (click)=\"onWindowChipClick(time_span)\">\n          {{time_span}}\n      </mat-chip>\n    </mat-chip-list>\n</mat-card-actions>\n</mat-card>\n\n<mat-card class=\"mat-elevation-z8 strategy-card chart-card\">\n    <mat-card-title>Candlestick Chart</mat-card-title>\n    <mat-card-content>\n        <div *ngIf=\"candles | async as data\">\n            <plotly-plot\n            [data]=\"data.data\"\n            [layout]=\"data.layout\"\n            [config]=\"{responsive: true}\">\n        </plotly-plot>\n        </div>\n    </mat-card-content>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["animate","state","style","transition","trigger","map","Breakpoints","MatPaginator","MatTableDataSource","MatSort","MAT_DIALOG_DATA","i0","ctx_r7","ctx_r8","ctx_r15","ctx_r41","card_r1","DashboardComponent","constructor","breakpointObserver","symmary_service","dialog","x","y","type","mode","name","height","xaxis","tickformat","margin","l","r","b","t","pad","orientation","title","id","cols","rows","observe","Handset","pipe","matches","current_cards","cards_base","forEach","val","push","Object","assign","i","length","console","debug","ngOnInit","summary","getData","refreshData","openDialog","position","dialogRef","open","DialogOrders","data","orders","panelClass","width","applyFilter","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","ngAfterViewInit","sort","refreshSummary","reloadData","positions","reverse","number_trades","number_winnings","daily_pnl","date","pnl","symbols_pnl","plotly_daily","total_pnl","symbols_pnl_data","symbol","hasOwnProperty","plotly_symbols_pnl","selectors","viewQuery","ctx","minHeight","onClick","close","decls","vars","consts","template","DOCUMENT","UntilDestroy","untilDestroyed","fromEvent","ctx_r6","ctx_r9","ctx_r12","LogsComponent","logs","document","viewport","getScrollPosition","_a","onLengthChipClick","n","refreshLogs","onLogChipClick","log_name","last_logs","onScrollToTop","log","scrollToPosition","shareReplay","_r0","NavComponent","result","of","data_r11","StrategyComponent","candlesticks","trading_symbols","onWindowChipClick","time_window","refreshCandles","onSymbolChipClick","candles","available_symbols"],"sourceRoot":"webpack:///"}